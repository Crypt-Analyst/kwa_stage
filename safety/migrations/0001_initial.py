# Generated by Django 5.2.4 on 2025-07-22 18:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('bikes', '0002_initial'),
        ('members', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ComplianceChecklist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bike_insurance_valid', models.BooleanField(default=False)),
                ('personal_insurance_valid', models.BooleanField(default=False)),
                ('driving_license_valid', models.BooleanField(default=False)),
                ('motorcycle_permit_valid', models.BooleanField(default=False)),
                ('commercial_permit_valid', models.BooleanField(default=False)),
                ('safety_training_completed', models.BooleanField(default=False)),
                ('first_aid_training_completed', models.BooleanField(default=False)),
                ('good_conduct_certificate', models.BooleanField(default=False)),
                ('stage_membership_active', models.BooleanField(default=True)),
                ('compliance_score', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('member', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='compliance', to='members.member')),
            ],
        ),
        migrations.CreateModel(
            name='Insurance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insurance_type', models.CharField(choices=[('bike_comprehensive', 'Bike Comprehensive'), ('bike_third_party', 'Bike Third Party'), ('personal_accident', 'Personal Accident'), ('medical', 'Medical Insurance'), ('life', 'Life Insurance')], max_length=20)),
                ('policy_number', models.CharField(max_length=100, unique=True)),
                ('insurance_company', models.CharField(max_length=200)),
                ('coverage_amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('premium_amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('reminder_date', models.DateField(help_text='Date to send renewal reminder')),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('pending', 'Pending Renewal')], default='active', max_length=20)),
                ('policy_document', models.FileField(blank=True, upload_to='insurance_documents/')),
                ('agent_name', models.CharField(blank=True, max_length=200)),
                ('agent_phone', models.CharField(blank=True, max_length=20)),
                ('claims_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('bike', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='bikes.bike')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='insurances', to='members.member')),
            ],
            options={
                'ordering': ['-end_date'],
            },
        ),
        migrations.CreateModel(
            name='License',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_type', models.CharField(choices=[('driving_license', 'Driving License'), ('motorcycle_permit', 'Motorcycle Permit'), ('commercial_permit', 'Commercial Permit'), ('psv_license', 'PSV License'), ('good_conduct', 'Certificate of Good Conduct')], max_length=20)),
                ('license_number', models.CharField(max_length=100, unique=True)),
                ('issue_date', models.DateField()),
                ('expiry_date', models.DateField()),
                ('reminder_date', models.DateField(help_text='Date to send renewal reminder')),
                ('status', models.CharField(choices=[('valid', 'Valid'), ('expired', 'Expired'), ('suspended', 'Suspended'), ('revoked', 'Revoked'), ('pending_renewal', 'Pending Renewal')], default='valid', max_length=20)),
                ('issuing_authority', models.CharField(max_length=200)),
                ('license_document', models.FileField(blank=True, upload_to='license_documents/')),
                ('restrictions', models.TextField(blank=True, help_text='Any restrictions on the license')),
                ('endorsements', models.TextField(blank=True, help_text='Special endorsements')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='licenses', to='members.member')),
            ],
            options={
                'ordering': ['-expiry_date'],
            },
        ),
        migrations.CreateModel(
            name='SafetyIncident',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('incident_type', models.CharField(choices=[('accident', 'Accident'), ('near_miss', 'Near Miss'), ('equipment_failure', 'Equipment Failure'), ('unsafe_behavior', 'Unsafe Behavior'), ('harassment', 'Harassment'), ('theft', 'Theft/Robbery')], max_length=20)),
                ('severity', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], max_length=10)),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('location', models.CharField(max_length=300)),
                ('incident_date', models.DateTimeField()),
                ('action_taken', models.TextField(blank=True)),
                ('preventive_measures', models.TextField(blank=True)),
                ('investigation_required', models.BooleanField(default=False)),
                ('investigation_completed', models.BooleanField(default=False)),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolution_date', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('involved_member', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='involved_incidents', to='members.member')),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reported_incidents', to='members.member')),
            ],
            options={
                'ordering': ['-incident_date'],
            },
        ),
        migrations.CreateModel(
            name='SafetyTraining',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('training_type', models.CharField(choices=[('defensive_driving', 'Defensive Driving'), ('first_aid', 'First Aid'), ('motorcycle_safety', 'Motorcycle Safety'), ('traffic_rules', 'Traffic Rules & Regulations'), ('emergency_response', 'Emergency Response'), ('customer_service', 'Customer Service'), ('road_safety', 'Road Safety')], max_length=20)),
                ('training_title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('trainer_name', models.CharField(max_length=200)),
                ('training_institution', models.CharField(max_length=200)),
                ('venue', models.CharField(max_length=200)),
                ('scheduled_date', models.DateTimeField()),
                ('completed_date', models.DateTimeField(blank=True, null=True)),
                ('duration_hours', models.DecimalField(decimal_places=2, max_digits=5)),
                ('status', models.CharField(choices=[('scheduled', 'Scheduled'), ('completed', 'Completed'), ('missed', 'Missed'), ('cancelled', 'Cancelled'), ('in_progress', 'In Progress')], default='scheduled', max_length=20)),
                ('score', models.DecimalField(blank=True, decimal_places=2, help_text='Training score (if applicable)', max_digits=5, null=True)),
                ('passed', models.BooleanField(default=False)),
                ('certificate', models.FileField(blank=True, upload_to='training_certificates/')),
                ('attendance_sheet', models.FileField(blank=True, upload_to='training_attendance/')),
                ('certificate_expiry', models.DateField(blank=True, null=True)),
                ('renewal_required', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='safety_trainings', to='members.member')),
            ],
            options={
                'ordering': ['-scheduled_date'],
            },
        ),
    ]
