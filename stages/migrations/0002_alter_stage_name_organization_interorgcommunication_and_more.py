# Generated by Django 5.2.4 on 2025-07-22 10:17

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('members', '0002_initial'),
        ('stages', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterField(
            model_name='stage',
            name='name',
            field=models.CharField(max_length=200),
        ),
        migrations.CreateModel(
            name='Organization',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, unique=True)),
                ('organization_type', models.CharField(choices=[('sacco', 'SACCO'), ('chama', 'Chama'), ('stage_group', 'Stage Group'), ('welfare_society', 'Welfare Society')], max_length=20)),
                ('registration_number', models.CharField(help_text='Official registration number', max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('phone_number', models.CharField(max_length=15, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(max_length=254)),
                ('website', models.URLField(blank=True)),
                ('county', models.CharField(max_length=100)),
                ('sub_county', models.CharField(max_length=100)),
                ('town', models.CharField(max_length=100)),
                ('address', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('allow_inter_org_communication', models.BooleanField(default=True, help_text='Allow communication with other organizations for lost bikes etc')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('admin_user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='administered_organizations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Organization',
                'verbose_name_plural': 'Organizations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='InterOrgCommunication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('communication_type', models.CharField(choices=[('lost_bike', 'Lost Bike Alert'), ('found_bike', 'Found Bike Report'), ('emergency', 'Emergency Alert'), ('announcement', 'General Announcement'), ('meeting', 'Meeting Notice')], max_length=20)),
                ('subject', models.CharField(max_length=200)),
                ('message', models.TextField()),
                ('bike_registration', models.CharField(blank=True, help_text='Bike registration number if applicable', max_length=50)),
                ('location_lost', models.CharField(blank=True, help_text='Location where bike was lost', max_length=200)),
                ('contact_phone', models.CharField(blank=True, max_length=15)),
                ('image', models.ImageField(blank=True, null=True, upload_to='inter_org_communications/')),
                ('is_broadcast', models.BooleanField(default=True, help_text='Send to all organizations or specific ones')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_resolved', models.BooleanField(default=False, help_text='Mark as resolved for lost bike cases')),
                ('sender_member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_communications', to='members.member')),
                ('sender_organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_communications', to='stages.organization')),
                ('target_organizations', models.ManyToManyField(blank=True, related_name='received_communications', to='stages.organization')),
            ],
            options={
                'verbose_name': 'Inter-Organization Communication',
                'verbose_name_plural': 'Inter-Organization Communications',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Chama',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('chama_type', models.CharField(choices=[('welfare', 'Welfare Fund'), ('investment', 'Investment Group'), ('savings', 'Savings Group'), ('emergency', 'Emergency Fund'), ('loan', 'Loan Group')], max_length=20)),
                ('description', models.TextField(blank=True)),
                ('minimum_contribution', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('meeting_day', models.CharField(blank=True, help_text='e.g., Every Friday', max_length=20)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chairman', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='chaired_chamas', to='members.member')),
                ('secretary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='secretary_chamas', to='members.member')),
                ('treasurer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='treasurer_chamas', to='members.member')),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chamas', to='stages.organization')),
            ],
            options={
                'verbose_name': 'Chama',
                'verbose_name_plural': 'Chamas',
                'ordering': ['name'],
                'unique_together': {('organization', 'name')},
            },
        ),
        migrations.AddField(
            model_name='stage',
            name='organization',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='stages', to='stages.organization'),
        ),
        migrations.AlterUniqueTogether(
            name='stage',
            unique_together={('organization', 'name')},
        ),
        migrations.CreateModel(
            name='ChamaMembership',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joined_date', models.DateField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('monthly_contribution', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('chama', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='memberships', to='stages.chama')),
                ('member', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chama_memberships', to='members.member')),
            ],
            options={
                'ordering': ['-joined_date'],
                'unique_together': {('chama', 'member')},
            },
        ),
    ]
